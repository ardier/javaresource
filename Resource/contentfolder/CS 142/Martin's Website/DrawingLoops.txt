import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;

import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

// DrawingLoops by Martin Hock (Version of 10/14/2017)
// You may only use this code as a student of Martin Hock in CS 142, Fall 2017.
// This code is used to demonstrate drawing with loops.
// As a student, I recommend only modifying the main method!
public class DrawingLoops {

	// Starting width and height - set these up to taste
	// These values will change when the user resizes the window
	public static int width = 600, height = 400;

	// The code in this block sets up the window. Please don't change it!
	static {
		JFrame window = new JFrame("Graphics window");
		final JPanel panel = new JPanel() {
			private int oldWidth = width, oldHeight = height;

			protected void paintComponent(Graphics gx) {
				if (width != oldWidth || height != oldHeight) {
					JOptionPane.showMessageDialog(window, "Please do not modify width or height in main!", "Error",
							JOptionPane.ERROR_MESSAGE);
					System.exit(0);
				}
				g = (Graphics2D) gx;
				width = window.getContentPane().getWidth();
				height = window.getContentPane().getHeight();
				oldWidth = width;
				oldHeight = height;
				g.clearRect(0, 0, width, height);
				g.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
				g.setColor(Color.BLACK);
				g.setBackground(Color.WHITE);
				main(null);
			}
		};
		window.setBackground(Color.WHITE);
		panel.setBackground(Color.WHITE);
		window.setSize(width, height);
		window.setContentPane(panel);
		window.setVisible(true);
		window.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		g = (Graphics2D) window.getGraphics();
	}

	public static Graphics2D g;

	// You can use the main method below to draw on the screen!
	public static void main(String[] args) {
		// You may call methods on g and refer to width and height within main.
		// Don't modify width and height!
		/*
		// CHANGE THE CODE TO DRAW A VERTICAL LINE OF CIRCLES!
		for (int x = 0, y = 0; x+100 < width; x = x + 10) {
			if (x % 30 == 0) continue;
			g.drawOval(x, y, 100, 100);
		}
		for (int x = 0, y = height - 100; x+100 < width; x = x + 10) {
			if (x % 30 == 0) continue;
			g.drawOval(x, y, 100, 100);
		}
		for (int x = 0, y = 0; y+100 < height; y = y + 10) {
			if (y % 30 == 0) continue;
			g.drawOval(x, y, 100, 100);
		}
		for (int x = width - 100, y = 0; y+100 < height; y = y + 10) {
			if (y % 30 == 0) continue;
			g.drawOval(x, y, 100, 100);
		}
//		while (y+100 < height) {
//			g.drawOval(x, y, 100, 100);
//			y = y + 100;
//		}
		*/
		float hue = 0;
		for (int x = 0; x+100 < width; x = x + 100) {
			for (int y = 0; y + 100 < height; y = y + 100) {
				g.setColor(Color.getHSBColor(hue, 1, 1));
				g.fillOval(x, y, 100, 100);
				hue = hue + 1.0f/64;
			}
		}
		
		
		
	}

}
